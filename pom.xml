<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.pi</groupId>
    <artifactId>pi-server</artifactId>
    <version>0.1.0</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.0.0.RC3</version>
    </parent>

    <!-- this will cause the PIPlayer to be built and copied into the public/js directory if it doesn't exist -->
    <profiles>
        <profile>
            <id>PIPlayer</id>
            <activation>
                <file>
                    <missing>${basedir}/static/js</missing>
                </file>
            </activation>
            <build>
            <plugins>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>

                        <phase>generate-sources</phase>
                        <configuration>
                            <target name="building">
                                <echo>
                                    <!--  NPM INSTALL  -->
                                </echo>
                                <exec executable="cmd" dir="${project.basedir}/PIPlayer"
                                      osfamily="windows" failonerror="true">
                                    <arg line="/c npm config set color false"/>
                                </exec>
                                <exec executable="npm" dir="${project.basedir}/PIPlayer" failonerror="true">
                                    <arg line="config set color false"/>
                                </exec>
                                <exec executable="cmd" dir="${project.basedir}/PIPlayer"
                                      osfamily="windows" failonerror="true">
                                    <arg line="/c npm install"/>
                                </exec>
                                <exec executable="npm" dir="${project.basedir}/PIPlayer" failonerror="true">
                                    <arg value="install" />
                                </exec>
                                <echo>
                                    <!-- GRUNT  -->
                                </echo>
                                <exec executable="cmd" dir="${project.basedir}/PIPlayer"
                                      osfamily="windows" resultproperty="cmdresult">
                                    <arg line="/c grunt --no-color > grunt.status "/>
                                </exec>
                                <exec executable="grunt" dir="${project.basedir}/PIPlayer"
                                      osfamily="unix" resultproperty="cmdresult">
                                    <arg line="build"/>
                                </exec>
                                <condition property="cmdsuccess">
                                    <equals arg1="${cmdresult}" arg2="0"/>
                                </condition>
                                <fail unless="cmdsuccess"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
                <!-- This builds the PIPlayer using NPM / Grunt -->
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>2.6</version>
                    <executions>
                        <execution>
                            <id>copy-resources</id>
                            <!-- here the phase you need -->
                            <phase>validate</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <outputDirectory>${basedir}/static/js</outputDirectory>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/PIPlayer/dist/js</directory>
                                    </resource>
                                </resources>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
            </build>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <!-- Databases - Uses HSQL by default -->
        <!-- <dependency> <groupId>mysql</groupId> <artifactId>mysql-connector-java</artifactId> <version>${mysql.version}</version> </dependency> -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>${hsqldb.version}</version>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.8.2</version>
        </dependency>

        <!-- Database connection pool
See here for more details on commons-dbcp versus tomcat-jdbc:
http://blog.ippon.fr/2013/03/13/improving-the-performance-of-the-spring-petclinic-sample-application-part-3-of-5/
-->
        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
            <scope>runtime</scope>
        </dependency>



    </dependencies>

    <properties>
        <start-class>edu.virginia.psyc.pi.Application</start-class>
    </properties>

    <build>
        <plugins>
            <plugin> 
                <artifactId>maven-compiler-plugin</artifactId> 
                <version>2.3.2</version> 
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </repository>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/libs-milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>spring-snapshots</id>
            <url>http://repo.spring.io/libs-snapshot</url>
            <snapshots><enabled>true</enabled></snapshots>
        </pluginRepository>
    </pluginRepositories>





</project>